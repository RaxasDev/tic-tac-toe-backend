// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250919130855_Create_InitialMigration_Player_GameMatch_v0.0.1")]
    partial class Create_InitialMigration_Player_GameMatch_v001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.GameMatch", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Movements")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlayerOId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerXId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WinSideO")
                        .HasColumnType("integer");

                    b.Property<int>("WinSideX")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerOId");

                    b.HasIndex("PlayerXId");

                    b.ToTable("GameMatches", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("Domain.Models.GameMatch", b =>
                {
                    b.HasOne("Domain.Models.Player", "PlayerO")
                        .WithMany("GameMatchesAsO")
                        .HasForeignKey("PlayerOId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Models.Player", "PlayerX")
                        .WithMany("GameMatchesAsX")
                        .HasForeignKey("PlayerXId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlayerO");

                    b.Navigation("PlayerX");
                });

            modelBuilder.Entity("Domain.Models.Player", b =>
                {
                    b.Navigation("GameMatchesAsO");

                    b.Navigation("GameMatchesAsX");
                });
#pragma warning restore 612, 618
        }
    }
}
